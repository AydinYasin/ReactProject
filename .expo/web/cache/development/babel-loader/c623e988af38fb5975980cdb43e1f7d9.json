{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\MobileProject\\\\ReactProject\\\\MobileDevelopment_Yasin_Murat\\\\components\\\\Info.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport default Info = function Info(props) {\n  var AdresView = function AdresView(props) {\n    return React.createElement(View, {\n      style: styles.infoAdres,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      key: props.key.key.OBJECTID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    }, props.adres.ADRES));\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      adres = _useState2[0],\n      setDetails = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var loadDetails = function loadDetails() {\n    var response, json;\n    return _regeneratorRuntime.async(function loadDetails$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('https://opendata.arcgis.com/datasets/c6152054d1d140bfa02ee5bdbf2d8e1b_585.geojson'));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n            setDetails(json.features);\n            setLoading(false);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert('Cannot load details, contact admin!');\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function () {\n    loadDetails();\n  }, []);\n  return React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }\n  }, React.createElement(ActivityIndicator, {\n    color: \"black\",\n    animating: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }, adres.map(function (a) {\n    return React.createElement(AdresView, {\n      key: a.properties,\n      adres: a.properties,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }\n    });\n  })));\n};\nvar styles = StyleSheet.create({\n  infoContainer: {\n    flex: 1,\n    padding: 25,\n    backgroundColor: '#fff',\n    justifyContent: 'center'\n  },\n  infoAdres: {\n    padding: 5\n  }\n});","map":{"version":3,"sources":["D:/MobileProject/ReactProject/MobileDevelopment_Yasin_Murat/components/Info.js"],"names":["React","useEffect","useState","Info","props","AdresView","styles","infoAdres","key","OBJECTID","adres","ADRES","setDetails","loading","setLoading","loadDetails","fetch","response","json","features","Alert","alert","infoContainer","map","a","properties","StyleSheet","create","flex","padding","backgroundColor","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAKA,eAAeC,IAAI,GAAG,cAACC,KAAD,EAAW;AAEjC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,KAAD,EAAW;AACzB,WACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEH,KAAK,CAACI,GAAN,CAAUA,GAAV,CAAcC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCL,KAAK,CAACM,KAAN,CAAYC,KAAhD,CADA,CADA;AAKH,GAND;;AAFiC,kBAULT,QAAQ,CAAC,EAAD,CAVH;AAAA;AAAA,MAU1BQ,KAV0B;AAAA,MAUnBE,UAVmB;;AAAA,mBAWHV,QAAQ,CAAC,KAAD,CAXL;AAAA;AAAA,MAW1BW,OAX0B;AAAA,MAWjBC,UAXiB;;AAajC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZD,YAAAA,UAAU,CAAC,IAAD,CAAV;AAFY;AAAA,6CAGSE,KAAK,CAAC,mFAAD,CAHd;;AAAA;AAGRC,YAAAA,QAHQ;AAAA;AAAA,6CAIKA,QAAQ,CAACC,IAAT,EAJL;;AAAA;AAIRA,YAAAA,IAJQ;AAMZN,YAAAA,UAAU,CAACM,IAAI,CAACC,QAAN,CAAV;AACAL,YAAAA,UAAU,CAAC,KAAD,CAAV;AAPY;AAAA;;AAAA;AAAA;AAAA;AAUZM,YAAAA,KAAK,CAACC,KAAN,CAAY,qCAAZ;AACAP,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAeAb,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,SACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACgB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAiC,IAAA,SAAS,EAAET,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSH,KAAK,CAACa,GAAN,CAAU,UAACC,CAAD;AAAA,WAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAC,CAACC,UAAlB;AAA8B,MAAA,KAAK,EAAED,CAAC,CAACC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAA,GAAV,CADT,CAFA,CADA;AASC,CAzCD;AA2CA,IAAMnB,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AACjCL,EAAAA,aAAa,EAAE;AACXM,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,OAAO,EAAE,EAFE;AAGXC,IAAAA,eAAe,EAAE,MAHN;AAIXC,IAAAA,cAAc,EAAE;AAJL,GADkB;AAOjCxB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,OAAO,EAAE;AADF;AAPsB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, Alert, ActivityIndicator } from 'react-native';\r\n\r\n\r\n\r\nexport default Info = (props) => {\r\n\r\nconst AdresView = (props) => {\r\n    return (\r\n    <View style={styles.infoAdres}>\r\n    <Text key={props.key.key.OBJECTID}>{props.adres.ADRES}</Text>\r\n    </View>\r\n);\r\n}\r\n\r\nconst [adres, setDetails] = useState([]);\r\nconst [loading, setLoading] = useState(false);\r\n\r\nconst loadDetails = async() => {\r\n    try{\r\n        setLoading(true);\r\n        let response = await fetch('https://opendata.arcgis.com/datasets/c6152054d1d140bfa02ee5bdbf2d8e1b_585.geojson');\r\n        let json = await response.json();\r\n    \r\n        setDetails(json.features);\r\n        setLoading(false);\r\n    }\r\n    catch (error){\r\n        Alert.alert('Cannot load details, contact admin!');\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\nuseEffect(() => {\r\n    loadDetails();\r\n}, []);\r\n\r\nreturn(\r\n<View style={styles.infoContainer}>\r\n    <ActivityIndicator color=\"black\" animating={loading}/>\r\n<ScrollView>\r\n        {adres.map((a) => <AdresView key={a.properties} adres={a.properties}/>)}\r\n</ScrollView>\r\n\r\n</View>\r\n)\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\ninfoContainer: {\r\n    flex: 1,\r\n    padding: 25,\r\n    backgroundColor: '#fff',\r\n    justifyContent: 'center',\r\n},\r\ninfoAdres: {\r\n    padding: 5,\r\n}\r\n});"]},"metadata":{},"sourceType":"module"}